<5 : 아키텍쳐>



234코드의 ???입니다./ 

저희 프로젝트의 “시스템 구조”를 설명드리겠습니다.



시스템은 크게

{ 게시판 다이아그램 } 

모임을 함께할 사람을 모집하는 
“게시판 페이지”

{ 모임 다이아그램 }
 게시판을 통해 모인 
“모임 페이지”을 중심으로 구성했으며,


각 페이지의 모든 데이터는

{ 오라클 디비 다이아그램 }

“오라클 데이터베이스” 에 저장되고 

{ 오라클 디비 중심 화살표 및 마이바티스 }

"마이바티스"를 통해 “오라클 디비”에 저장됩니다.

본 서비스를 이용하는 “클라이언트”들은

{ 클라이언트 다이어그램 }

“에이잭스"와 “제이슨"을 

{ Ajax, JSON 아이콘 }  


사용해 컨텐츠를 “요청” 또는 “응답” 하며

이 모든 컨텐츠들은 앞 팀이 설명한

{ SPRING MVC}

“스프링 MVC 모델  ”로 설계하였으며/

“오라클 디비”에 “세이브"되거나 “로딩" 됩니다.//



<6 : 시연영상 >

세부적인 내용은 시연영상을 통해 알려드리겠습니다.

{시연영상 시작}

{시연영상 끝}




<7 : 구현기술 >
다음으로 구현기술에 대해 설명해드리겠습니다.

{이클립스, 그래들 아이콘}

IUMUI는 “이클립스”와 
빌드툴인 “그래들” 을 통해 제작되었습니다/

{엑서드 아이콘}
DB 모델링은 “엑서드”로
설계하였고, 

{오라클 아이콘}
각종 데이터들은 “오라클 데이터베이스”로 구축하였으며,

{마이바티스 아이콘}
 “마이바티스” 스프링 연동 모듈로
스프링 트랜잭션에 쉽게 연동되도록 처리하였습니다./

또한 MVC의 VIEW 단 에서는,

{HTML,JS,CSS 아이콘}
“HTML5”  “자바스크립트”, “CSS”를 
통해 화면 구성하였고,

{AJAX ,JSON 아이콘}
“AJAX”와 “JSON”을 통해

데이터를 주고 받아도 페이지가 변하지 않게 비동기통신을 해서 데이터를 전송하고,
"부분적인 화면갱신"을 가능하게 하였으며,

{Jquery 아이콘}
AJAX를 통해 늘어난 코드수는 “Jquery” 라이브러리
를 사용하여 코드수를 줄였습니다.

{풀캘린더 아이콘}
달력화면은 “풀캘린더”
플러그인을 이용하였으며.

{부트스트랩 아이콘}
CSS 디자인을 심플하게 하기위해 “부트스트랩”을 사용 하였습니다.

{SPRING 아이콘}
그리고,마지막으로
“스프링 프레임워크”를
통해 프로젝트를 모델링 하였습니다.